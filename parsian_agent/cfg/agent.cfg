#!/usr/bin/env python
PACKAGE='agent_config'

from dynamic_reconfigure.parameter_generator_catkin import *

generator = ParameterGenerator()

bagbang = generator.add_group("Bang Bang", state = True)
bagbang.add("AccMaxForward", double_t, 0, "Acc Max Forward", 4.5, -50, 50)
bagbang.add("AccMaxNormal", double_t, 0, "Acc Max Normal", 3.5, -50, 50)
bagbang.add("DecMax", double_t, 0, "Dec", 3.5, -50, 50)
bagbang.add("VelMax", double_t, 0, "Max Vel", 3.5, -50, 50)
bagbang.add("posKP", double_t, 0, "POS PID KP", 3, -50, 50)
bagbang.add("posKI", double_t, 0, "POS PID KI", 0.0, -50, 50)
bagbang.add("posKD", double_t, 0, "POS PID KI", 2.0, -50, 50)
bagbang.add("thKP", double_t, 0, "TH PID KP", 1.5, -50, 50)
bagbang.add("thKI", double_t, 0, "TH PID KI", 0.0, -50, 50)
bagbang.add("thKD", double_t, 0, "TH PID KD", 0.0, -50, 50)

kalman = generator.add_group("Kalman", state = True)
kalman.add("UseKalman", bool_t, 0, "Use Kalman", True)
kalman.add("Blindness", int_t, 0, "Blindness", 40, -100, 100)
kalman.add("Delay_Time", double_t, 0, "Delay Time", 0.0, -50, 50)

errt = generator.add_group("ERRT", state = True)
errt.add("Draw_Path", bool_t, 0, "Draw Path",True)
errt.add("Goal_Probablity", double_t, 0, "Goal Probablity", 0.3, -50, 50)
errt.add("MWaypoint_Catch_Probablityax", double_t, 0.6, "Waypoint Catch Probablity", 3.5, -50, 50)
errt.add("Extend_Step", double_t, 0, "Extend Step", 0.100, -50, 50)
errt.add("Target_Distance_Threshold", double_t, 0.010, "Target Distance Threshold", 3.5, -50, 50)

pasdpos = generator.add_group("Pass Positioning", state = True)
pasdpos.add("Big_Step_X", double_t, 0, "Big Step X", 1.000, -50, 50)
pasdpos.add("Big_Step_Y", double_t, 0, "Big Step Y", 0.800, -50, 50)
pasdpos.add("Small_Step_X", double_t, 0, "Small Step X", 0.300, -50, 50)
pasdpos.add("Small_Step_Y", double_t, 0, "Small Step Y", 0.300, -50, 50)
pasdpos.add("Ball_Decel", double_t, 0, "Ball deceleration", 2.0, -50, 50)
pasdpos.add("ChipPass_Recv_StayBackFactor", double_t, 0, "ChipPass Recv StayBackFactor", 2.0, -50, 50)

coach = generator.add_group("Coach", state = True)
coach.add("kickThreshold", double_t, 0, "Kick Threshold", 0.1, -50, 50)
coach.add("oneTouchKickThreshold", double_t, 0, "OneTouch Kick Threshold", 0.05, -50, 50)
coach.add("oneTouchAngleThreshold", double_t, 0, "OneTouch Angle Threshold", 75, -50, 50)
coach.add("kickClosedAngle", double_t, 0, "Kick Closed Angle", 40, -50, 50)

mp = generator.add_group("Motion Profiler", state = True)
mp.add("active", bool_t, 0, "Activate Profiler", False)
mp.add("autoreset", bool_t, 0, "Auto Reset", True)
mp.add("drawpath", bool_t, 0, "Draw Robot Path", False)
mp.add("drawvel", bool_t, 0, "Draw Robot Velocity", False)
mp.add("drawdir", bool_t, 0, "Draw Robot Direction", False)

sp_bt = generator.add_group("Skills Parameters BangBang Trajectory", state = True)
sp_bt.add("firstDegThreshold", double_t, 0, "first Degree Threshold", 10, -90, 90)
sp_bt.add("firstDegCoeffecient", double_t, 0, "first Degree Coeffecient", 0.300, -50, 50)
sp_bt.add("secondDegThreshold", double_t, 0, "second Degree Threshold", 20.0, -90, 90)
sp_bt.add("secondDegCoeffecient", double_t, 0, "second Degree Coeffecient", 2.0, -50, 50)
sp_bt.add("thirdDegThreshold", double_t, 0, "third Degree Threshold", 45.0, -90, 90)
sp_bt.add("thirdDegCoeffecient", double_t, 0, "third Degree Coeffecient", 4.0, -50, 50)
sp_bt.add("forthDegCoeffecient", double_t, 0, "forth Degree Coeffecient", 4.0, -50, 50)


sp_btt = generator.add_group("Skills Parameters BangBang Trajectory Tangent", state = True)
sp_btt.add("firstDistThreshold", double_t, 0, "first Dist Threshold", 0.1, -5, 5)
sp_btt.add("firstDistCoeffecient", double_t, 0, "first Dist Threshold", 8.0, -5, 5)
sp_btt.add("secondDistThreshold", double_t, 0, "first Dist Threshold", 0.05, -5, 5)
sp_btt.add("secondDistCoeffecient", double_t, 0, "first Dist Threshold", 4, -5, 5)
sp_btt.add("thirdDistThreshold", double_t, 0, "first Dist Threshold", 0.025, -5, 5)
sp_btt.add("thirdDistCoeffecient", double_t, 0, "first Dist Threshold", 2.0, -5, 5)
sp_btt.add("forthDistThreshold", double_t, 0, "first Dist Threshold", 0.025, -5, 5)
sp_btt.add("forthDistCoeffecient", double_t, 0, "first Dist Threshold", 1, -5, 5)
sp_btt.add("fifthDistThreshold", double_t, 0, "first Dist Threshold", 0.005, -5, 5)
sp_btt.add("fifthDistCoeffecient", double_t, 0, "first Dist Threshold", 0.0, -5, 5)

sp_kot = generator.add_group("Skills Parameters Kick One Touch", state = True)
sp_kot.add("Landa", double_t, 0, "Landa", 0.2, -5, 5)
sp_kot.add("Gamma", double_t, 0, "Gamma", 0.9, -5, 5)
sp_kot.add("Delay", double_t, 0, "Delay", 0.02, -5, 5)
sp_kot.add("TimeFactor", double_t, 0, "TimeFactor", 1.0, -5, 5)

sp_m = generator.add_group("Skills Parameters Mark", state = False)

sp_cb = generator.add_group("Skills Parameters Clear Ball", state = False)
sp_cb.add("TargetMargin", double_t, 0, "Margin for Target Behind the ball",0.150 , -5, 5)
sp_cb.add("PointClearMargin", double_t, 0, "margin for checking if point is clear", 0.3, -5, 5)
sp_cb.add("DegThreshold", double_t, 0, "Switching Deg Threshold", 0.020, -5, 5)
sp_cb.add("ClearSuccessDist", double_t, 0, "Successful clear dist", 1.000, -5, 5)
sp_cb.add("ClearSuccessTargetDist", double_t, 0, "Successful clear dist to target", 0.500, -5, 5)
sp_cb.add("FollowBallDist", double_t, 0, "max dist to push ball", 0.500, -5, 5)

sp_p = generator.add_group("Skills Parameters Push", state = False)
sp_p.add("PushVel", double_t, 0, "Velocity of Pushin", 1.000, -5, 5)

roles = generator.add_group("Roles", state = False)
roles.add("DistToMarkedOpp", double_t, 0, "Dist To Marked Opponent", 0.160, -5, 5)
roles.add("RolesGamma", double_t, 0, "Gamma", 0.7, -5, 5)
roles.add("GoalieID", double_t, 0, "ID", 0, -5, 5)



exit(generator.generate(PACKAGE, "agent_config", "agent"))
